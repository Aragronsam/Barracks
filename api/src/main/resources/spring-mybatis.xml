<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.binbinary.ps.service;com.binbinary.ps.dao" />  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="1" />
    	<property name="ignoreUnresolvablePlaceholders" value="true" />   
        <property name="locations">
            <list>
				<value>classpath:jdbc.properties</value>  
            </list>
        </property>
    </bean>  
  
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"> 
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${jdbc.initialSize}"/>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${jdbc.maxActive}" />  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${jdbc.minIdle}" />  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${jdbc.maxWait}" />  
        <!-- 是否缓存preparedStatement，也就是PSCache -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="100" />        
        
        <property name="defaultAutoCommit" value="true" />
		    <property name="logAbandoned" value="true" />
		    <property name="removeAbandoned" value="true" />
		    <property name="removeAbandonedTimeout" value="180" />
		    <property name="validationQuery" value="select 1 from dual" />
		    <property name="testOnBorrow" value="false" />
		    <property name="testOnReturn" value="false" />
		    <property name="testWhileIdle" value="true" />
		    <property name="minEvictableIdleTimeMillis" value="300000" />
		    <property name="timeBetweenEvictionRunsMillis" value="150000" />
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" /> 
        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property> 
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/binbinary/ps/dao/mybatis/mapping/*.xml"></property>
        <!-- 根据实际情况修改或添加多个 -->  
        <property name="typeAliasesPackage" value="com.binbinary.ps.beans" />  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.binbinary.ps.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
  
    <!-- redis -->
    <import resource="spring-redis.xml"/>
</beans>